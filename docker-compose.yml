version: '3.3'

services:
  frontend:
    container_name: ${COMPOSE_PROJECT_NAME}_frontend
    build: frontend
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}
    depends_on:
      - backend
    ports:
      - 4173:4173
    volumes:
      - frontend_build:/app/dist/

  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    image: nginx:alpine
    ports:
      - ${NGINX_HTTP_PORT}:80
      - ${NGINX_HTTPS_PORT}:443
    environment:
      - DOMAIN=${DOMAIN}
      - BACKEND_PORT=${BACKEND_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./config/templates:/etc/nginx/templates:rw,cached
      - ./frontend/public/:/app/public/
      - frontend_build:/app/frontend/dist/
    restart: always
    depends_on:
      - frontend
      - backend

  backend:
    container_name: ${COMPOSE_PROJECT_NAME}_back
    build: backend
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PROJECT_NAME=${PROJECT_NAME}
      - PROJECT_DESCRIPTION=${PROJECT_DESCRIPTION}
      - DEBUG=${DEBUG}
      - HOST=${HOST}
    env_file:
      - backend/.env
    volumes:
      - ./backend/django_app/media/:/app/django_app/media/
    restart: always
    depends_on:
      - db

  db:
    container_name: ${COMPOSE_PROJECT_NAME}_db
    image: postgres:alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    restart: always

  redis:
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    image: redis
    restart: always

  celery-base:
    image: ${COMPOSE_PROJECT_NAME}_backend
    build: backend
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DEBUG=${DEBUG}
      - ENV=${ENV}
      - RUNNER_ENTRYPOINT=django_run_celery_base.sh
    working_dir: /app
    env_file:
      - backend/.env
    volumes:
      - ./backend/django_app/media/:/app/django_app/media/
    depends_on:
      - backend
      - redis
    restart: always

volumes:
  postgres_data:
  frontend_build:
